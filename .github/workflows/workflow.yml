env:
  RUBY_VERSION: 2.7.2
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_DB: postgres

name: Workflow
on: [push, pull_request]
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "üçè This job's status is ${{ job.status }}."
      - run: echo "Ruby version is ${{ env.RUBY_VERSION }}"
  rubocop-test:
    name: Rubocop
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.4
          bundler-cache: true
      - name: Check code
        run: bundle exec rubocop
#  brakeman:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: ruby/setup-ruby@v1
#        with:
#          ruby-version: ${{ env.RUBY_VERSION }}
#          bundler-cache: true
#      - name: brakeman report
#        run: |
#          bundle exec brakeman
#  rspec-test:
#    name: RSpec
#    needs: [rubocop-test, brakeman]
#    runs-on: ubuntu-latest
#    services:
#      postgres:
#        image: postgres:latest
#        ports:
#          - 5432:5432
#        env:
#          POSTGRES_USER: ${{ env.POSTGRES_USER }}
#          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
#    steps:
#      - uses: actions/checkout@v2
#      - uses: ruby/setup-ruby@v1
#        with:
#          ruby-version: ${{ env.RUBY_VERSION }}
#          bundler-cache: true
#      - name: Install postgres client
#        run: sudo apt-get install libpq-dev
#      - name: Install dependencies
#        run: |
#          gem install bundler
#          bundler install
#      - name: Create database
#        run: |
#          bundler exec rails db:create RAILS_ENV=test
#          bundler exec rails db:migrate RAILS_ENV=test
#      - name: Run tests
#        run: bundler exec rake
#      - name: Upload coverage results
#        uses: actions/upload-artifact@master
#        if: always()
#        with:
#          name: coverage-report
#          path: coverage